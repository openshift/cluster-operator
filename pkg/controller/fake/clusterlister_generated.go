// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/openshift/cluster-operator/pkg/client/listers_generated/clusteroperator/v1alpha1 (interfaces: ClusterLister,ClusterNamespaceLister)

package fake

import (
	gomock "github.com/golang/mock/gomock"
	v1alpha10 "github.com/openshift/cluster-operator/pkg/apis/clusteroperator/v1alpha1"
	v1alpha1 "github.com/openshift/cluster-operator/pkg/client/listers_generated/clusteroperator/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
)

// Mock of ClusterLister interface
type MockClusterLister struct {
	ctrl     *gomock.Controller
	recorder *_MockClusterListerRecorder
}

// Recorder for MockClusterLister (not exported)
type _MockClusterListerRecorder struct {
	mock *MockClusterLister
}

func NewMockClusterLister(ctrl *gomock.Controller) *MockClusterLister {
	mock := &MockClusterLister{ctrl: ctrl}
	mock.recorder = &_MockClusterListerRecorder{mock}
	return mock
}

func (_m *MockClusterLister) EXPECT() *_MockClusterListerRecorder {
	return _m.recorder
}

func (_m *MockClusterLister) Clusters(_param0 string) v1alpha1.ClusterNamespaceLister {
	ret := _m.ctrl.Call(_m, "Clusters", _param0)
	ret0, _ := ret[0].(v1alpha1.ClusterNamespaceLister)
	return ret0
}

func (_mr *_MockClusterListerRecorder) Clusters(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Clusters", arg0)
}

func (_m *MockClusterLister) List(_param0 labels.Selector) ([]*v1alpha10.Cluster, error) {
	ret := _m.ctrl.Call(_m, "List", _param0)
	ret0, _ := ret[0].([]*v1alpha10.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClusterListerRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}

// Mock of ClusterNamespaceLister interface
type MockClusterNamespaceLister struct {
	ctrl     *gomock.Controller
	recorder *_MockClusterNamespaceListerRecorder
}

// Recorder for MockClusterNamespaceLister (not exported)
type _MockClusterNamespaceListerRecorder struct {
	mock *MockClusterNamespaceLister
}

func NewMockClusterNamespaceLister(ctrl *gomock.Controller) *MockClusterNamespaceLister {
	mock := &MockClusterNamespaceLister{ctrl: ctrl}
	mock.recorder = &_MockClusterNamespaceListerRecorder{mock}
	return mock
}

func (_m *MockClusterNamespaceLister) EXPECT() *_MockClusterNamespaceListerRecorder {
	return _m.recorder
}

func (_m *MockClusterNamespaceLister) Get(_param0 string) (*v1alpha10.Cluster, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(*v1alpha10.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClusterNamespaceListerRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockClusterNamespaceLister) List(_param0 labels.Selector) ([]*v1alpha10.Cluster, error) {
	ret := _m.ctrl.Call(_m, "List", _param0)
	ret0, _ := ret[0].([]*v1alpha10.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockClusterNamespaceListerRecorder) List(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "List", arg0)
}
