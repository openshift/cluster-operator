#! /bin/bash
#
# fake-openshift-ansible is used for testing cluster-operator without creating resources
# on AWS. Instead of running the real ansible playbooks, fake-openshift-ansible verifies
# that the playbook exists and logs the action with the playbook-mock server.
#

set -o errexit

# Ensure that the playbook file exists.
[ -z $PLAYBOOK_FILE ] && { echo "PLAYBOOK_FILE environment variable not set."; exit 1; }
[ ! -f "${PLAYBOOK_FILE}" ] && { echo "Playbook file ${PLAYBOOK_FILE} not found."; exit 1; }

# Ensure that the inventory file exists.
[ -z $INVENTORY_FILE ] && { echo "INVENTORY_FILE environment variable not set."; exit 1; }
[ ! -f "${INVENTORY_FILE}" ] && { echo "Inventory file ${INVENTORY_FILE} not found."; exit 1; }

# Ensure that the AWS access key ID exists.
[ -z $AWS_ACCESS_KEY_ID ] && { echo "AWS_ACCESS_KEY_ID environment variable not set."; exit 1; }

# Ensure that the AWS secret access key exists.
[ -z $AWS_SECRET_ACCESS_KEY ] && { echo "AWS_SECRET_ACCESS_KEY environment variable not set."; exit 1; }

echo PLAYBOOK_FILE=${PLAYBOOK_FILE}
echo INVENTORY_FILE=${INVENTORY_FILE}
echo OPTS=${OPTS}

# Log the run of the playbook with playbook-mock server.
#
# TODO: Send the contents of the inventory file and the contents of the variables file instead
# of just the name of the inventory file and the OPTS.
CLUSTER_OPERATOR_NAMESPACE=${POD_NAMESPACE:-cluster-operator}
curl http://playbook-mock.${CLUSTER_OPERATOR_NAMESPACE}.svc.cluster.local -d "{\"playbook\":\"${PLAYBOOK_FILE}\",\"inventory\":\"${INVENTORY_FILE}\",\"variables\":\"${OPTS}\"}"
